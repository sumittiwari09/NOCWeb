@model NewZapures_V2.Models.AEPSTransaction.AEPSRequest
@using NewZapures_V2.Models;
@{
    ViewBag.Title = "AEPS";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var MobileOperator = ZapurseCommonlist.GetMobileOperator();
}
@*@section styles{
    <link href="~/plugins/datatables/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/datatables/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/datatables/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <link href="~/plugins/sweet-alert2/sweetalert2.min.css" rel="stylesheet" type="text/css">
    <link href="~/plugins/animate/animate.css" rel="stylesheet" type="text/css">
    }*@
@section styles{
    <link href="~/plugins/datatables/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/datatables/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/datatables/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" />
<style type="text/css">
    .select2-container .select2-selection--single, .select2-container .select2-selection--multiple {
        font-size: 1.2em;
        min-height: 45px !important
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        color: #444 !important;
        line-height: 45px !important;
    }

    .machinedivContainer {
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        grid-template-rows: 100px;
        gap: 34px 24px;
    }

    .machineContainer {
        height: 4em;
        width: 12em;
        display: flex;
        border: 1px solid #c8c8c8;
        border-radius: 7px;
        -webkit-box-shadow: inset 17px 9px 36px -24px rgb(0 0 0 / 75%);
        -moz-box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        box-shadow: inset 17px 9px 36px -24px rgb(0 0 0 / 75%);
    }

    .machineOperatorName {
        width: 100%;
        height: 100%;
        display: flex;
        place-content: center;
        align-items: center;
        font-size: 1.5em;
    }

    .walletLeft {
        background: #edf0f5;
        padding: 20px;
        font-size: 25px;
        border-radius: 20px;
        color: black;
        text-align: center;
        width: 466px;
        margin: 0px 20px;
        box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -40px inset;
    }

    .selectedOperator {
        background: #506ee4;
        color: white;
    }

    .selectedPlan {
        background: #506ee4;
        color: white;
    }

        .selectedPlan h5 {
            color: white;
        }


    .divContainer {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: 100px;
        gap: 34px 24px;
    }

    .PlansShow {
        display: grid;
        grid-template-columns: 100%;
        grid-template-rows: auto;
        grid-row-gap: 10px;
        margin-top: 15px;
    }

    .PlanContainer {
        height: 5em;
        display: flex;
        border: 1px solid #c8c8c8;
        border-radius: 7px;
        -webkit-box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        -moz-box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
    }

    .DTHPlanContainer {
        height: 12em;
        display: grid;
        border: 1px solid #c8c8c8;
        border-radius: 7px;
        -webkit-box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        -moz-box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        margin-bottom: 17px;
    }

    .operatorContainer {
        height: 6em;
        display: flex;
        border: 1px solid #c8c8c8;
        border-radius: 7px;
        -webkit-box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        -moz-box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        box-shadow: inset 17px 9px 36px -24px rgba(0,0,0,0.75);
        cursor: pointer;
    }

    #operatorImage {
        width: 20%;
        height: 100%;
        border-right: 1px solid #e3d9d9;
        /* border-radius: 50%;*/
        -webkit-box-shadow: 17px 9px 23px -24px rgba(0,0,0,0.75);
        -moz-box-shadow: 17px 9px 23px -24px rgba(0,0,0,0.75);
        box-shadow: 17px 9px 23px -24px rgba(0,0,0,0.75);
    }

    #PlanAmount {
        width: 180px;
        height: 100%;
        border-right: 1px solid #e3d9d9;
        border-radius: 50%;
        display: flex;
        place-content: center;
        align-items: center;
        font-size: 3em;
        font-family: Arial;
        -webkit-box-shadow: 17px 9px 23px -24px rgba(0,0,0,0.75);
        -moz-box-shadow: 17px 9px 23px -24px rgba(0,0,0,0.75);
        box-shadow: 17px 9px 23px -24px rgba(0,0,0,0.75);
    }

    .OperatorName {
        width: 70%;
        height: 100%;
        display: flex;
        place-content: center;
        align-items: center;
        font-size: 1em;
        font-weight: 600;
    }

    .PlanDesc {
        width: 90%;
        height: 100%;
        display: grid;
        place-content: start;
        align-items: center;
        font-size: 13px;
        margin-left: 40px;
        grid-row-gap: 0px;
        grid-auto-flow: row;
        margin-top: 24px;
    }



    #rbBSNLTopup, #rbBSNLSpecial {
        display: block
    }

    input[type=radio] {
        display: none
    }

    .DTHMonthPlan {
        padding: 14px;
        color: white;
        border-radius: 43px;
        font-size: 17px !important;
        margin: 10px;
        cursor: pointer;
    }

    .selectedDTHPlan {
        background: green !important
    }

    .DTHPlanDesc {
        margin-left: 17px;
        margin-bottom: 35px;
    }

    .DTHPlanName {
        font-size: 21px;
        font-weight: 600;
    }

    .DTHPlanDescName {
        font-size: 18px;
    }
</style>

<link href="~/Content/select2/css/select2.css" rel="stylesheet" />

<div class="row">
    <div class="col-sm-12">
        <div class="page-title-box">
            <div class="float-right">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">Zapures</li>
                    <li class="breadcrumb-item">Master</li>
                    <li class="breadcrumb-item active">AEPS</li>
                </ol>
            </div>
            <h4 class="page-title">@ViewBag.Title</h4>
        </div><!--end page-title-box-->
    </div><!--end col-->
</div>

<div id="Loding" tabindex="-1" role="dialog" aria-labelledby="myModalLabelSmall" aria-hidden="true" class="modal fade" style="margin-top:20%">
    <div class="modal-dialog modal-sm whirl traditional" style="text-align:center">
        <img src="~/images/MobileOperators/loadernew.gif" width="45" height="45" />
    </div>
</div>

<div id="Lodingfinger" tabindex="-1" role="dialog" aria-labelledby="myModalLabelSmall" aria-hidden="true" class="modal fade" style="margin-top:20%">
    <div class="modal-dialog modal-sm whirl traditional" style="text-align:center">
        <img src="/images/BankIcon/fingerprintloader.gif" width="250" height="250" />
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <ul class="col container-filter categories-filter mb-0" id="filter">
                        <li><a class="categories active" data-filter="*" id="btnCashwithdrawal">Cash Withdrawal</a></li>
                        <li><a class="categories" data-filter=".branding" id="balanceenquiry">Balance Enquiry</a></li>
                        @*<li><a class="categories" data-filter=".design" id="btnministatement">Mimi Statement</a></li>*@
                    </ul>
                </div><!-- End portfolio  -->
            </div><!--end card-body-->
            @using (Html.BeginForm("FPRDService", "AEPS", FormMethod.Post, new { id = "frmActivation", name = "frmActivation", @data_parsley_validate = "" }))
            {
                <div class="card-body">

                    <div class="row col-lg-12" id="areaDemographic" name="areaDemographic">
                        @Html.HiddenFor(model => model.tranType, new { @Value = "010000" })
                        <input type="hidden" id="hdnscanner" name="hdnscanner" />
                        <input type="hidden" id="hdndata" name="hdndata" />
                        <input type="hidden" id="EncryAadhaarNo" name="EncryAadhaarNo" />
                        <input type="hidden" id="hdn_deviceinfo" name="hdn_deviceinfo" />
                        <input type="hidden" id="hdn_deviceinfo" name="hdn_deviceinfo" />
                        <div class="col-md-3">
                            <div class="form-group">
                                <lable>Aadhaar Number</lable>
                                <span style="color:red;">*</span>
                                <div>
                                    @Html.TextBoxFor(m => Model.AadhaarNo, new { @maxlength = "14", @class = "form-control allow_numeric", @placeholder = "Enter Your Aadhar Number", @required = "required" })
                                </div>

                            </div>
                        </div>
                        @*<div class="col-md-3">
                                <select class="form-control" id="ddlOperator">
                                    <option value="0">Select Bank</option>
                                    @{
                                        if (Model.BankDetailsList != null)
                                        {
                                            foreach (var item in Model.BankDetailsList)
                                            {

                                                var image = "../images/BankIcon/" + @item.bankName.Replace(" ", "_") + ".png";

                                                <option value='@item.iINNo' data-image='@image'>@item.bankName</option>

                                            }
                                        }
                                    }
                                </select>
                            </div>*@
                        <div class="col-md-3">
                            <div class="form-group">
                                <lable>Mobile Number</lable>
                                <span style="color:red;">*</span>
                                <div>
                                    @Html.TextBoxFor(m => Model.mobileNumber, new { @maxlength = "10", @class = "form-control allow_numeric", @placeholder = "Enter Mobile Number", @required = "required" })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <lable>Amount</lable>
                                <span style="color:red;">*</span>
                                <div>
                                    @Html.TextBoxFor(m => Model.Amount, new { @type = "number", @maxlength = "10", @class = "form-control allow_numeric", @placeholder = "Enter Amount", @required = "required" })
                                </div>

                            </div>
                        </div>
                        <!--<div class="col-md-3" id="divamt">
                            <div class="form-group">
                                <label>AMOUNT</label>
                                <span style="color:red;">*</span>
                                <div>
                                    <input type="number" id="Amount" name="Amount" placeholder="Enter Amount" value="" class="form-control">-->
                        @*@Html.TextBoxFor(m => Model.Amount, new { @maxlength = "5", @class = "form-control allow_numeric", @placeholder = "Enter Amount Rs.", @required = "required" })*@
                        <!--</div>
                            </div>
                        </div>-->

                        <div class="col-md-3">
                            <div class="form-group">
                                <input type="hidden" id="BankIINno" name="BankIINno" />
                                <lable>Bank</lable>
                                <span style="color:red;">*</span>
                                <div>

                                    @Html.TextBoxFor(m => Model.BankIINno, new { @id = "bankname", @maxlength = "10", @class = "form-control allow_numeric", @placeholder = "Enter Mobile Number", @required = "required", @readonly = "readonly" })
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="row col-lg-2">

                        </div>
                        <div class="row col-lg-8">
                            <input type="text" hidden id="txtEnckey" name="txtEnckey" value="8080808080808085" />
                            <input type="text" hidden id="txtEncIv" name="txtEncIv" value="8040804080408085" />
                            <input type="text" id="latitude" name="latitude" hidden />
                            <input type="text" id="longitude" name="longitude" hidden />
                            <input type="text" id="txtPotNo" style="display:none;" />
                            <div class="machinedivContainer">


                                <div id="operatorContainer_Mantra" class="machineContainer">
                                    @*onclick="selectOperator('rb__Mantra', 'Mobile','Mantra')"*@
                                    <input type="radio" name="ScannerDevice" id="rbb_Mantra" value="Mantra" style="display:none" />
                                    @*<div id="operatorImage" style="background: url(../images/fingePrintDevice/mantra.png ); background-size: contain; background-repeat: no-repeat; background-position: center"></div>*@
                                    <div class="machineOperatorName">
                                        Mantra
                                    </div>
                                </div>

                                <div id="operatorContainer_Morpho" class="machineContainer">
                                    @*onclick="selectOperator('rb__Morpho', 'Mobile','Morpho')"*@

                                    <input type="radio" name="ScannerDevice" id="rbb_Morpho" value="Morpho" style="display:none" />
                                    @*<div id="operatorImage" style="background: url(../images/fingePrintDevice/morpho.png ); background-size: contain; background-repeat: no-repeat; background-position: center"></div>*@
                                    <div class="machineOperatorName">
                                        Morpho
                                    </div>
                                </div>

                                <div id="operatorContainer_Tatvik" class="machineContainer" onclick="selectOperator('rb__Tatvik', 'Mobile','Tatvik')">

                                    <input type="radio" name="ScannerDevice" id="rbb_Tatvik" value="Tatvik" style="display:none" />
                                    @*<div id="operatorImage" style="background: url(../images/fingePrintDevice/Tatvik.png ); background-size: contain; background-repeat: no-repeat; background-position: center"></div>*@
                                    <div class="machineOperatorName">
                                        Tatvik
                                    </div>
                                </div>
                                <div id="operatorContainer_Secugen" class="machineContainer" onclick="selectOperator('rb__Secugen', 'Mobile','Secugen')">

                                    <input type="radio" name="ScannerDevice" id="rbb_Secugen" value="Secugen" style="display:none" />
                                    @*<div id="operatorImage" style="background: url(../images/fingePrintDevice/Tatvik.png ); background-size: contain; background-repeat: no-repeat; background-position: center"></div>*@
                                    <div class="machineOperatorName">
                                        Secugen
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="row col-lg-2">

                        </div>
                        <div class="row col-lg-8">

                            <div class="col-md-12" style="margin-left:20px">

                                <div class="checkbox checkbox-primary form-check-inline">
                                    <input type="checkbox" id="chkRememberMe" name="chkRememberMe">
                                    <label for="chkRememberMe" style="color:green;" id="lblUserConsent" name="lblUserConsent"> I Agree that Zapurse/Bank/UIDAI may share my details with each other for the purpose of authenticating my Aadhar Number. </label>
                                </div>

                                @*<div class="checkbox c-checkbox">
                                        <label style="color:green;" id="lblUserConsent" name="lblUserConsent">
                                            <input type="checkbox" required="required" id="chkRememberMe" name="chkRememberMe" />
                                            <span class="fa fa-check"></span>I Agree that Zapurse/Bank/UIDAI may share my details with each other for the purpose of authenticating my Aadhar Number.
                                        </label>
                                    </div>*@
                                <span style="color:red;" id="TermCondition"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12 text-center">
                            <input type="button" onclick="VerifyValues(); return true;" name="" id="btnVerify" class="btn btn-primary float-center" value="Capture Fingerprint" disabled>
                            @*<button type="button" id="btnLThumb" class="btn btn-success" value="Capture FingurePrint" onclick="DeviceInfo(); return true; return true;">&nbsp;Capture </button>*@
                        </div>

                        <div class="col-lg-12 text-center">
                            <input type="submit" name="btnSubmit" id="btnsubmit" class="btn btn-primary" value="submit" hidden>
                        </div>
                    </div>

                    <div id="divPlansForMobile">
                        <div id="loadingDiv" style="display:none;position: absolute;width: 100%;height: 80%;background: white;text-align: center;margin-left: -20px;z-index: 9;">
                            <img src="~/images/MobileOperators/loader.gif" width="45" height="45" />
                        </div>

                        <hr />
                        <div class="row col-12" id="PlansDiv" style="height:47vh;overflow-y:scroll">
                            <div class="card">
                                <div class="card-body">
                                    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search Bank..." title="Type Bank Name" class="form-control">
                                    <ul id="myUL" style="list-style-type: none; padding-left: 0px !important; padding-top: 10px; ">
                                        <li>
                                            <div class="divContainer">
                                                @{
                                                    if (Model.BankDetailsList != null)
                                                    {
                                                        foreach (var item in Model.BankDetailsList)
                                                        {

                                                            var imageURL = "../images/BankIcon/" + @item.bankName.Replace(" ", "_") + ".png";
                                                            <div id="operatorContainer_@item.iINNo" class="operatorContainer" onclick="selectBank('rb_@item.iINNo',@item.iINNo,'@item.bankName')">

                                                                <input type="radio" name="operator" id="rb_@item.iINNo" value="@item.bankName" style="display:none" />
                                                                <div id="operatorImage" style="background: url( @imageURL );background-size: contain;background-repeat: no-repeat;background-position: center"></div>
                                                                <div class="OperatorName">
                                                                    @item.bankName
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </li>
                                    </ul>
                                </div><!--end card-body-->
                            </div><!--end card-->
                        </div>
                    </div>
                    <!--<div class="row col-lg-12">

                    <div class="col-md-4">
                        <div class="form-group">
                            <input type="text" hidden id="txtEnckey" name="txtEnckey" value="8080808080808085" />
                            <input type="text" hidden id="txtEncIv" name="txtEncIv" value="8040804080408085" />
                            <input type="text" id="latitude" name="latitude" hidden />
                            <input type="text" id="longitude" name="longitude" hidden />
                            <input type="text" id="txtPotNo" style="display:none;" />-->
                    @*<label for="exampleFormControlSelect1">BIOMETRIC MACHINE</label>*@
                    <!--<select class="form-control" id="exampleFormControlSelect1">
                            <option>Mantra Scanner</option>
                            <option>Secugen Scanner</option>
                            <option>Tatvik Scanner</option>
                            <option>Morpho Scanner</option>
                        </select>
                    </div>-->
                    @*<div class="form-group">
                            <label for="username">CHOOSE BIOMETRIC MACHINE</label>
                            <input type="text" class="form-control" id="username" required="">
                        </div>*@
                    <!--</div>
                    </div>-->

                    <div class="col-md-12">
                        @*<div class="col-md-6">
                                <a href="@Url.Action("BackAction", "AEPSTransfer")" class="btn  btn-warning" title="Back">
                                    Back
                                </a>
                            </div>*@
                        <div class="col-md-12 text-right">

                        </div>
                    </div>
                    @*<div class="row col-lg-12">
                            <div class="col-md-4">
                                <a href="@Url.Action("BackAction", "AEPSTransfer")" class="btn  btn-warning" title="Back">
                                    Back
                                </a>
                                <input type="button" onclick="VerifyValues(); return true;" name="" id="btnVerify" class="btn btn-success btn-lg" value="Validate">
                            </div>
                        </div>*@
                </div>
            }
            @*<input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names.." title="Type in a name">

                <ul id="myUL">
                    <li>
                        <div class="divContainer">
                            @{
                                if (Model.BankDetailsList != null)
                                {
                                    foreach (var item in Model.BankDetailsList)
                                    {

                                        var imageURL = "../images/BankIcon/" + @item.bankName.Replace(" ", "_") + ".png";
                                        <div id="operatorContainer_@item.iINNo" class="operatorContainer" onclick="selectBank('rb_@item.iINNo',@item.iINNo)">

                                            <input type="radio" name="operator" id="rb_@item.iINNo" value="@item.bankName" style="display:none" />
                                            <div id="operatorImage" style="background: url( @imageURL );background-size: contain;background-repeat: no-repeat;background-position: center"></div>
                                            <div class="OperatorName">
                                                @item.bankName
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </li>
                </ul>*@

        </div><!--end card-body-->
    </div><!--end card-->

</div>

@*}*@
@*</div>*@
<script src="~/Content/jquery/jquery.js"></script>
@section Scripts {
    <script src="~/plugins/datatables/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/plugins/datatables/dataTables.bootstrap4.min.js" type="text/javascript"></script>
    <script src="~/plugins/datatables/dataTables.buttons.min.js" type="text/javascript"></script>
    <script src="~/plugins/datatables/buttons.bootstrap4.min.js" type="text/javascript"></script>
    <script src="~/plugins/datatables/jszip.min.js" type="text/javascript"></script>

    @*<script src="~/Content/LoginSignUp/js/jquery.js"></script>*@
    @*<script src="~/Content/select2/js/select2.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.8/dist/sweetalert2.all.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>*@
    <script src="~/Content/globalDomain.js"></script>
    <script src="~/Scripts/aeps.js"></script>
    <script>
        function myFunction() {
            var input, filter, ul, li, a, i, txtValue;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            ul = document.getElementById("myUL");
            li = ul.getElementsByClassName("operatorContainer");
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByClassName("OperatorName")[0];               
                txtValue = a.textContent || a.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = "";
                } else {
                    li[i].style.display = "none";
                }
            }
        }

        function selectBank(item, BankID, BankName) {          
            var validate_inputs = document.querySelectorAll('[id^=rb_]');
            validate_inputs.forEach(function (input_valid) {
                var containerID = input_valid.id.replace('rb_', 'operatorContainer_');
                $("#" + input_valid.id).removeAttr('checked');
                $('#' + containerID).removeClass('selectedOperator');
            });
            $('#' + item).attr('checked', 'true');           
            var item = item.replace('rb_', 'operatorContainer_');
            $('#' + item).addClass('selectedOperator');
            $('#btnVerify').removeAttr('disabled');
            $('#BankIINno').val(BankID);
            $('#bankname').val(BankName);   
        }
    </script>
    <script type="text/javascript">
        var x = document.getElementById("demo");

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        }
        function showPosition(position) {
            $("#latitude").val(position.coords.latitude);
            $("#longitude").val(position.coords.longitude);
        }
    </script>
    <script>
        $(document).ready(function () {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
            $("#btnCashwithdrawal").click(function () {
                alert("btnCashwithdrawal");
                $("#btnCashwithdrawal").addClass('active');
                $("#balanceenquiry").removeClass('active');
                $("#btnministatement").removeClass('active');
                $('#Amount').removeAttr("readonly");                
                $("#tranType").val("010000");
            });
            $("#balanceenquiry").click(function () {
                alert("balanceenquiry");
                $('#Amount').prop("readonly", true);               
                $("#tranType").val("310000");
                $("#btnCashwithdrawal").removeClass('active');
                $("#balanceenquiry").addClass('active');
                $("#btnministatement").removeClass('active');
            });
            $("#btnministatement").click(function () {
                alert("btnministatement");
                $('#Amount').removeAttr("readonly");                
                $("#btnCashwithdrawal").removeClass('active');
                $("#balanceenquiry").removeClass('active');
                $("#btnministatement").addClass('active');
            });

            var globaUserProperties = new Object();
            var base_url = window.location;
            globaUserProperties.domain = base_url.origin;// + "/" + window.location.pathname.split('/')[1];
            DeviceInfo();


            $('#mobileNumber').blur(function () {
                var mobile = $('#mobileNumber').val();
                if (mobile.length > 0) {
                    if (mobile.substr(0, 1) == 0 || mobile.length < 10) {
                        Swal.fire({
                            position: 'center',
                            icon: 'error',
                            title: 'Mobile Number Is Not Valid, Must Be 10 Digits Long',
                            allowOutsideClick: false,
                            showCloseButton: true,
                            showConfirmButton: false,
                        });
                    }
                }
            });
            $(".allow_numeric").on("input", function (evt) {
                var self = $(this);
                self.val(self.val().replace(/\D/g, ""));
                if ((evt.which < 48 || evt.which > 57)) {
                    evt.preventDefault();
                }
            });
            $('#AadhaarNo').keyup(function () {
                var value = $(this).val();
                value = value.replace(/\D/g, "").split(/(?:([\d]{4}))/g).filter(s => s.length > 0).join("-");
                $(this).val(value);
            });
            $('#AadhaarNo').on("change, blur", function () {
                var value = $(this).val();
                var maxLength = $(this).attr("maxLength");
                if (value.length != maxLength) {
                    $(this).addClass("highlight-error");
                } else {
                    $(this).removeClass("highlight-error");
                }
            });
        });

        $("#ddlOperator").select2({
            templateResult: formatState,
            templateSelection: formatState
        });

        $(".singleselect").select2();

        function formatState(opt) {
            console.log(opt);
            if (!opt.id) {
                return opt.text
            }

            var optimage = $(opt.element).attr('data-image');
            console.log(optimage)
            if (!optimage) {
                return opt.text
            } else {
                var $opt = $(
                    `<span style="display: flex;align-items: center;"><img src="${optimage}" width="35px" /> <span style='margin-left:10px'>${opt.text} </span></span>`
                );
                return $opt;
            }
        };

        function DeviceInfo() {
            $("#Loding").modal({ backdrop: "static" }).show();
            $('#Loding').addClass('in');
            $('<div class="modal-backdrop fade in"></div>').appendTo(document.body);
            //var Scannerall = $('#hdnscanner').val();
            //$("#LodingSub").modal({ backdrop: "static" });
            //$('#Loding').addClass('in');
            //$('<div class="modal-backdrop fade in"></div>').appendTo(document.body);
            //if (Scannerall == "Tatvik Scanner") {
            //    //var uri = "https://127.0.0.1:11100/rd/info";
            //var uri = "http://localhost:11102/rd/info"
            //}
            //else {
            var uri = "http://127.0.0.1:11100/rd/info";
            //var uri = "http://localhost:11100/rd/info";
            //}
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.open("DEVICEINFO", uri, true);
            xmlhttp.send();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState != 4) {
                    // $("#LodingSub").modal().hide();
                    //$('.modal-backdrop').remove();
                    return;
                }
                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                    var $MantraDevice = xmlhttp.responseText;
                    var $xml = $($.parseXML(String($MantraDevice)));
                    if ($xml.find("DeviceInfo").attr("dpId") === 'MANTRA.MSIPL') {
                        $("#operatorContainer_Mantra").addClass("btn-primary");
                        $('#rbb_Mantra').attr('checked', 'true');
                        //$("#rbb__Mantra").prop("checked", true);
                        $('#rbb__Morpho').removeAttr('checked');
                        $('#rbb__Tatvik').removeAttr('checked');

                        Swal.fire(
                            'success',
                            'Mantra finger print machine is connected in your system!',
                            'sucess'
                        )
                        $("#Loding").modal().hide();
                        $('.modal-backdrop').remove();
                    }
                    else if ($xml.find("DeviceInfo").attr("dpId") === 'SECUGEN.SGI') {
                        $("#operatorContainer_Secugen").addClass("btn-primary");
                        $('#rbb_Mantra').removeAttr('checked');
                        $('#rbb_Morpho').removeAttr('checked');
                        $('#rbb_Tatvik').attr('checked', 'false');
                        $("#Loding").modal().hide();
                        $('.modal-backdrop').remove();
                    }
                    else if ($xml.find("DeviceInfo").attr("dpId") === 'TATVIK.TATVIK') {
                        $("#operatorContainer_Tatvik").addClass("btn-primary");
                        $('#rbb_Mantra').removeAttr('checked');
                        $('#rbb_Morpho').removeAttr('checked');
                        $('#rbb_Tatvik').attr('checked', 'true');
                        $("#Loding").modal().hide();
                        $('.modal-backdrop').remove();
                        Swal.fire(
                            'success',
                            'TATVIK finger print machine is connected in your system!',
                            'sucess'
                        )
                    }
                    else if ($xml.find("DeviceInfo").attr("dpId") === 'Morpho.SmartChip') {
                        $("#operatorContainer_Morpho").addClass("btn-primary");
                        $('#rbb_Mantra').removeAttr('checked');
                        $('#rbb_Morpho').attr('checked', 'true');
                        $('#rbb_Tatvik').removeAttr('checked');

                        Swal.fire(
                            'success',
                            'Morpho finger print machine is connected in your system!',
                            'sucess'
                        )
                        $("#Loding").modal().hide();
                        $('.modal-backdrop').remove();
                    }
                    else {
                        $("#Loding").modal().hide();
                        $('.modal-backdrop').remove();
                        Swal.fire({
                            position: 'center',
                            icon: 'error',
                            title: 'Device not connected in your system Please connect Device!',
                            allowOutsideClick: false,
                            showCloseButton: true,
                            showConfirmButton: false,
                        });

                    }
                }
                else {
                    $("#Loding").modal().hide();
                    $('.modal-backdrop').remove();
                    Swal.fire({
                        position: 'center',
                        icon: 'error',
                        title: 'Device not connected in your system Please connect Device!',
                        allowOutsideClick: false,
                        showCloseButton: true,
                        showConfirmButton: false,
                    });
                    //$("#LodingSub").modal().hide();
                    //$('.modal-backdrop').remove();
                }
            }
        }
    </script>
    <script type="text/javascript">
        //Verhoeff algorithm
        // multiplication table d
        var d = [
            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 0, 6, 7, 8, 9, 5],
            [2, 3, 4, 0, 1, 7, 8, 9, 5, 6],
            [3, 4, 0, 1, 2, 8, 9, 5, 6, 7],
            [4, 0, 1, 2, 3, 9, 5, 6, 7, 8],
            [5, 9, 8, 7, 6, 0, 4, 3, 2, 1],
            [6, 5, 9, 8, 7, 1, 0, 4, 3, 2],
            [7, 6, 5, 9, 8, 2, 1, 0, 4, 3],
            [8, 7, 6, 5, 9, 3, 2, 1, 0, 4],
            [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]];
        // permutation table p
        var p = [
            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 5, 7, 6, 2, 8, 3, 0, 9, 4],
            [5, 8, 0, 3, 7, 9, 6, 1, 4, 2],
            [8, 9, 1, 6, 0, 4, 3, 5, 2, 7],
            [9, 4, 5, 3, 1, 2, 6, 8, 7, 0],
            [4, 2, 8, 6, 5, 7, 3, 9, 0, 1],
            [2, 7, 9, 3, 8, 0, 6, 4, 1, 5],
            [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]];
        // inverse table inv
        var inv = [0, 4, 3, 2, 1, 5, 6, 7, 8, 9];
        // converts string or number to an array and inverts it
        function invArray(array) {
            if (Object.prototype.toString.call(array) === "[object Number]") {
                array = String(array);
            }
            if (Object.prototype.toString.call(array) === "[object String]") {
                array = array.split("").map(Number);
            }
            return array.reverse();
        }
        // generates checksum
        function generate(array) {
            var c = 0;
            var invertedArray = invArray(array);
            for (var i = 0; i < invertedArray.length; i++) {
                c = d[c][p[((i + 1) % 8)][invertedArray[i]]];
            }
            return inv[c];
        }
        // validates checksum
        function validate(array) {
            var c = 0;
            var invertedArray = invArray(array);
            for (var i = 0; i < invertedArray.length; i++) {
                c = d[c][p[(i % 8)][invertedArray[i]]];
            }
            return (c === 0);
        }
        function VerifyValues() {
            //if ($('#frmActivation').parsley().validate()) {
            //alert("in");
            //alert(globaUserProperties.domain);
            var imageURL = globaUserProperties.domain + "/images/BankIcon/fingerprintloader.gif";
            //var imageURL = globaUserProperties.domain.split('/')[0] + "/images/BankIcon/fingerprintloader.gif";
            //alert(imageURL);
            var imgdiv = '<img src="' + imageURL + '" width="200" height="170">';
            Swal.fire({
                position: 'center',
                title: 'light glow on Finger print Device put finger on to Capture',
                iconHtml: imgdiv,
                allowOutsideClick: false,
                showCloseButton: false,
                showConfirmButton: false,
            });            
            var flag = 0;
            $('#mobileNumber').css('border-color', '');
            $('#AadhaarNo').css('border-color', '');
            $('#tranType').css('border-color', '');
            $('#ddlOperator').css('border-color', '');
            $('#Amount').css('border-color', '');
            $('#lblUserConsent').css('color', 'green');            
            var ScannerValue = $("input[name='ScannerDevice']:checked").val();
            debugger;   
            if (ScannerValue == null) {
                alert("Please Select the Scanner.");
                $("#Lodingfinger").modal().hide();
                $('.modal-backdrop').remove();
                return false;
            }
            else {
                $('#hdnscanner').val(ScannerValue);
            }
            if ($("#AadhaarNo").val().replace('_', '').length != 14) {
                flag = flag + 1;
                $('#AadhaarNo').css('border-color', 'red');
                Swal.fire(
                    'info',
                    'Aadhar Number should be 12 Digits, Please try Again with valid Aadhaar number!',
                    'info'
                )
                $("#Lodingfinger").modal().hide();
                $('.modal-backdrop').remove();
            }
            if (validate($("#AadhaarNo").val().replace('-', '').replace('-', '')) == false) {
                $('#AadhaarNo').css('border-color', 'red');
                flag = flag + 1;
                Swal.fire(
                    'info',
                    'Invalid Aadhaar Number, Please try Again with valid Aadhaar number!',
                    'info'
                )
                $("#Lodingfinger").modal().hide();
                $('.modal-backdrop').remove();
            }
            if ($("#mobileNumber").val() == "") {
                $('#mobileNumber').css('border-color', 'red');
                flag = flag + 1;
                Swal.fire(
                    'info',
                    'Mobile Number mandatory!',
                    'info'
                )
                $("#Lodingfinger").modal().hide();
                $('.modal-backdrop').remove();
            }
            if ($("#tranType").val() == "") {
                flag = flag + 1;
                $('#tranType').css('border-color', 'red');
                $("#Amount").val('0');
            }
            if ($("#BankIINno").val() == "") {
                flag = flag + 1;
                $('#BankIINno').css('border-color', 'red');
            }
            if ($("#tranType").val() == "010000") {
                var amt = $("#Amount").val();
                if (parseFloat(amt) >= 100 && parseFloat(amt) <= 10000) {
                    if (parseFloat(parseFloat($("#Amount").val()) % 10) != 0) {
                        flag = flag + 1;
                        Swal.fire(
                            '',
                            'Amount Should be multiple of 10 Rs, Please try again!',
                            'error'
                        )                        
                        return false;
                    }
                }
                else {
                    $('#Amount').css('border-color', 'red');
                    Swal.fire(
                        '',
                        'Amount Should be less than or equal to 10000 Rs. and greater than 100 Rs. Please try Again!',
                        'error'
                    )
                    //$("#Lodingfinger").modal().hide();
                    //$('.modal-backdrop').remove();
                    return false;
                }
            }

            if ($("#chkRememberMe").is(":checked") == false) {
                flag = flag + 1;
                $('#lblUserConsent').css('color', 'red');
                Swal.fire(
                    'info',
                    'Please accept user consent to send aadhar data to UIDAI server!',
                    'info'
                )
                $("#Lodingfinger").modal().hide();
                $('.modal-backdrop').remove();
            }

            if (flag == 0) {                
                var xmlhttp = new XMLHttpRequest();
                var AdData = xmlhttp.responseText;
                var enckey = CryptoJS.enc.Utf8.parse($("#txtEnckey").val());
                var encIv = CryptoJS.enc.Utf8.parse($("#txtEncIv").val());
                AdData = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse($("#AadhaarNo").val()), enckey,
                    { keySize: 128 / 8, iv: encIv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
                AdData = AdData.ciphertext.toString(CryptoJS.enc.Base64);
                $("#EncryAadhaarNo").val(AdData);               
                $('#imgFinger').prop('href', '/images/process.gif');
                DeviceCapture();                
            }
            // }

        }

    </script>
    <script type="text/javascript">
        $("#btnsubmit").click(function () {
            $("#Loding").modal({ backdrop: "static" }).show();
            $('#Loding').addClass('in');
            $('<div class="modal-backdrop fade in"></div>').appendTo(document.body);
        });

    </script>

    <script type="text/javascript">


        function DeviceCapture() {
            var Scannerall = document.getElementById("hdnscanner").value;            
            if (Scannerall == "Tatvik") {
                var uri = "https://127.0.0.1:11100/rd/info";
                //var uri = "http://localhost:11100/rd/info";
            }
            else {
                var uri = "http://127.0.0.1:11100/rd/info";
                //var uri = "http://localhost:11100/rd/info";
            }
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.open("DEVICEINFO", uri, true);
            xmlhttp.send();
            xmlhttp.onreadystatechange = function () {

                if (this.readyState != 4) {
                    //$("#LodingSub").modal().hide();
                    //$('.modal-backdrop').remove();
                    return;
                }
                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                    var $MantraDevice = xmlhttp.responseText;
                    var $xml = $($.parseXML(String($MantraDevice)));
                    if (Scannerall == "Mantra") {
                        if ($xml.find("DeviceInfo").attr("dpId") === 'MANTRA.MSIPL') {

                            startCaptureRDMantra('mantra', 'auth', getCapturedData);
                        }
                        else {
                            Swal.fire(
                                'error',
                                'Device not Found!',
                                'error'
                            )                           
                            $("#Lodingfinger").modal().hide();
                            $('.modal-backdrop').remove();
                        }
                    }
                    else if (Scannerall == "Secugen") {
                        if ($xml.find("DeviceInfo").attr("dpId") === 'SECUGEN.SGI') {
                            debugger;
                            startCaptureRDSecugen(Scannerall, 'auth', getCapturedData);
                        }
                        else {
                            Swal.fire(
                                'error',
                                'Device not Found!',
                                'error'
                            )
                            $("#Lodingfinger").modal().hide();
                            $('.modal-backdrop').remove();
                        }
                    }
                    else if (Scannerall == "Tatvik") {
                        if ($xml.find("DeviceInfo").attr("dpId") === 'TATVIK.TATVIK') {
                            debugger;
                            startCaptureRDTatvik(Scannerall, 'auth', getCapturedData);
                        }
                        else {
                            Swal.fire(
                                'error',
                                'Device not Found!',
                                'error'
                            )
                            $("#Lodingfinger").modal().hide();
                            $('.modal-backdrop').remove();
                        }
                    }
                    else if (Scannerall == "Morpho") {                        
                        if (Scannerall == "Morpho") {
                            startCaptureRDMorpho(Scannerall, 'auth', getCapturedData);
                        }
                        else {
                            Swal.fire(
                                'error',
                                'Device not Found!',
                                'error'
                            )
                            $("#Lodingfinger").modal().hide();
                            $('.modal-backdrop').remove();
                        }
                    }
                }
                else {
                    Swal.fire(
                        'error',
                        'Device not Found!',
                        'error'
                    )
                    $("#LodingSub").modal().hide();
                    $('.modal-backdrop').remove();
                }
            }
        }

    </script>

    <script>
        //Mantra Device

        function startCaptureRDMantra(fpdevice, authType, fcallback) {
            var uri = "http://127.0.0.1:11100/rd/"; //Non-Secure
            //var uri = "http://localhost:11100/rd/";
            var error_msg = "Use following possible steps to resolve the issue:<br>1. Register your device from vendor or using Register Your Device link.<br>2. Download and install the latest registered device drivers.<br>3. Start/ restart the registered device service.";

            rdCapture(uri + 'capture', authType, function (err, data) {

                if (err != null) {
                    fcallback({ type: "rd", status: "error", data: error_msg });
                } else {
                    var $xml = $($.parseXML(String(data)));
                    if ($xml.find("Resp").attr("errCode") === '0') {
                        fcallback({ type: "rd", status: "success", data: Base64.encode(String(data)) });

                        $('#FingerSuccess').removeClass('hidden');
                        $('#Fingerblack').addClass('hidden');
                        $("#btnsubmit").show();
                    }
                    else if ($xml.find("Resp").attr("errCode") === '999') {
                        fcallback({ type: "rd", status: "failed", data: error_msg });
                    }
                    else {
                        fcallback({ type: "rd", status: "failed", data: "Error: " + $xml.find("Resp").attr("errInfo") + " (" + $xml.find("Resp").attr("errCode") + ")" });

                    }
                }
            });
        }
        var rdCapture = function (url, authType, callback) {
            var xhr = new XMLHttpRequest();
            xhr.open('CAPTURE', url, true);
            xhr.responseType = 'text';    //json
            var wadh = "";
            if (authType.toLowerCase() === "ekyc") { wadh = "RZ+k4w9ySTzOibQdDHPzCFqrKScZ74b3EibKYy1WyGw="; }
            Swal.fire(
                'info',
                'light glow on Finger print Device put finger on to Capture......',
                'info'
            )           
            $('#btnLThumb').css('display', 'none');
            var pidXml = '<PidOptions ver="1.0"><Opts fCount="1" fType="0" format="0" pidVer="2.0" timeout="20000" posh="UNKNOWN" env="P" wadh="" /></PidOptions>';
            //console.log(pidXml);
            xhr.onload = function () {
                if (xhr.status == 200) { callback(null, xhr.response); }
                else { callback(xhr.status); }
            };
            xhr.onerror = function () {
                callback(xhr.status);
                // console.log(xhr.status);
            };
            xhr.ontimeout = function () {
                callback(xhr.status);
                //console.log(xhr.response);
            };
            xhr.abort = function () {
                callback(xhr.status);
                //console.log(xhr.response);
            };
            xhr.send(pidXml);
        };

        //Morpho device
        function startCaptureRDMorpho(fpdevice, authType, fcallback) {
            var uri = "http://127.0.0.1:11100/rd/info";
            //var uri = "http://localhost:11100/rd/info";
            debugger;
            var error_msg = "Use following possible steps to resolve the issue:<br>1. Register your device from vendor or using Register Your Device link.<br>2. Download and install the latest registered device drivers.<br>3. Start/ restart the registered device service.";
            rdCaptureMorpho(uri + 'capture', authType, function (err, data) {
                debugger
                if (err != null) {
                    fcallback({ type: "rd", status: "error", data: error_msg });
                } else {
                    var $xml = $($.parseXML(String(data)));
                    if ($xml.find("Resp").attr("errCode") === '0') {
                        fcallback({ type: "rd", status: "success", data: Base64.encode(String(data)) });

                        $('#FingerSuccess').removeClass('hidden');
                        $('#Fingerblack').addClass('hidden');
                        $("#btnsubmit").show();
                    }
                    else if ($xml.find("Resp").attr("errCode") === '999') {
                        fcallback({ type: "rd", status: "failed", data: error_msg });
                    }
                    else {
                        fcallback({ type: "rd", status: "failed", data: "Error: " + $xml.find("Resp").attr("errInfo") + " (" + $xml.find("Resp").attr("errCode") + ")" });

                    }
                }
            });
        }
        var rdCaptureMorpho = function (url, authType, callback) {
            var PortNumber = 11100;
            var url = "http://127.0.0.1:11100/rd/capture";
            //var url = "http://localhost:11100/rd/capture";
            debugger;
            var wadh = "";
            var PIDOPTS = '<PidOptions ver="1.0"><Opts env="P" fCount="1" wadh="" fType="0" format="0" pidVer="2.0"></Opts><Demo></Demo><CustOpts></CustOpts><Bios></Bios></PidOptions>';
            var xhr = new XMLHttpRequest();


            if (authType.toLowerCase() === "ekyc") { wadh = "RZ+k4w9ySTzOibQdDHPzCFqrKScZ74b3EibKYy1WyGw="; }
            //Swal.fire(
            //    'info',
            //    'light glow on Finger print Device put finger on to Capture......',
            //    'info'
            //)
            //Messenger.options =
            //{
            //    extraClasses: 'messenger-fixed messenger-on-top messenger-on-right',
            //    theme: 'future'
            //}
            //Messenger().post({
            //    message: "light glow on Finger print Device put finger on to Capture......",
            //    type: 'info',
            //    showCloseButton: true,
            //    hideAfter: 10
            //});

            xhr.open('CAPTURE', url, true);

            xhr.onload = function () {

                var status = xhr.status;


                if (xhr.status == 200) {

                    callback(null, xhr.response);
                }
                else { callback(xhr.status); }


            };

            xhr.onloadend = function () {
                console.log(xhr.response);
            };

            xhr.onresponse = function () {
                alert("On Response")
                console.log(xhr.response);
            };

            xhr.onerror = function () {
                alert("ONERROR");
                console.log(xhr.response);
            };

            xhr.ontimeout = function () {
                alert("ONTIMEOUT");
                console.log(xhr.response);
            };

            xhr.abort = function () {
                alert("ONABORT");
                console.log(xhr.response);
            };

            xhr.oncompleted = function () {
                alert("ONcompleted");
                console.log(xhr.response);
            };


            xhr.send(PIDOPTS);

        }

        //Tatvik device
        function startCaptureRDTatvik(fpdevice, authType, fcallback) {
            //var uri = "http://localhost:11102/rd/info";
            var uri = "https://127.0.0.1:11102/rd/info";
            debugger;
            var error_msg = "Use following possible steps to resolve the issue:<br>1. Register your device from vendor or using Register Your Device link.<br>2. Download and install the latest registered device drivers.<br>3. Start/ restart the registered device service.";
            rdCaptureTatvik(uri + 'capture', authType, function (err, data) {
                if (err != null) {
                    fcallback({ type: "rd", status: "error", data: error_msg });
                } else {
                    var $xml = $($.parseXML(String(data)));
                    if ($xml.find("Resp").attr("errCode") === '0') {
                        fcallback({ type: "rd", status: "success", data: Base64.encode(String(data)) });

                        $('#FingerSuccess').removeClass('hidden');
                        $('#Fingerblack').addClass('hidden');
                        $("#btnsubmit").show();
                    }
                    else if ($xml.find("Resp").attr("errCode") === '999') {
                        fcallback({ type: "rd", status: "failed", data: error_msg });
                    }
                    else {
                        fcallback({ type: "rd", status: "failed", data: "Error: " + $xml.find("Resp").attr("errInfo") + " (" + $xml.find("Resp").attr("errCode") + ")" });

                    }
                }
            });
        }
        var rdCaptureTatvik = function (url, authType, callback) {
            //var uri = "http://localhost:11102/rd/capture";
            var uri = "https://127.0.0.1:11102/rd/capture";
            debugger;
            //
            var xhr = new XMLHttpRequest();
            xhr.open('CAPTURE', url, true);
            xhr.responseType = 'text';    //json
            var wadh = "";
            if (authType.toLowerCase() === "ekyc") { wadh = "RZ+k4w9ySTzOibQdDHPzCFqrKScZ74b3EibKYy1WyGw="; }
            //Messenger.options =
            //{
            //    extraClasses: 'messenger-fixed messenger-on-top messenger-on-right',
            //    theme: 'future'
            //}
            //Messenger().post({
            //    message: "light glow on Finger print Device put finger on to Capture......",
            //    type: 'info',
            //    showCloseButton: true,
            //    hideAfter: 10
            //});
            Swal.fire(
                'info',
                'light glow on Finger print Device put finger on to Capture......',
                'info'
            )
            $('#btnLThumb').css('display', 'none');
            var pidOptionsXml = "<PidOptions ver='1.0'><Opts env='P' fCount='1' fType='0' format='0' pType='0' pCount='0' pgCount='0' pTimeout='20000' pidVer='2.0'>" +
                "</Opts><Demo></Demo><CustOpts></CustOpts><Bios></Bios></PidOptions>";
            //console.log(pidXml);
            xhr.onload = function () {
                if (xhr.status == 200) { callback(null, xhr.response); }
                else { callback(xhr.status); }
            };
            xhr.onerror = function () {
                callback(xhr.status);
                // console.log(xhr.status);
            };
            xhr.ontimeout = function () {
                callback(xhr.status);
                //console.log(xhr.response);
            };
            xhr.abort = function () {
                callback(xhr.status);
                //console.log(xhr.response);
            };
            xhr.send(pidOptionsXml);
        };

        var Base64 = { _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function (e) { var t = ""; var n, r, i, s, o, u, a; var f = 0; e = Base64._utf8_encode(e); while (f < e.length) { n = e.charCodeAt(f++); r = e.charCodeAt(f++); i = e.charCodeAt(f++); s = n >> 2; o = (n & 3) << 4 | r >> 4; u = (r & 15) << 2 | i >> 6; a = i & 63; if (isNaN(r)) { u = a = 64 } else if (isNaN(i)) { a = 64 } t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a) } return t }, decode: function (e) { var t = ""; var n, r, i; var s, o, u, a; var f = 0; e = e.replace(/[^A-Za-z0-9+/=]/g, ""); while (f < e.length) { s = this._keyStr.indexOf(e.charAt(f++)); o = this._keyStr.indexOf(e.charAt(f++)); u = this._keyStr.indexOf(e.charAt(f++)); a = this._keyStr.indexOf(e.charAt(f++)); n = s << 2 | o >> 4; r = (o & 15) << 4 | u >> 2; i = (u & 3) << 6 | a; t = t + String.fromCharCode(n); if (u != 64) { t = t + String.fromCharCode(r) } if (a != 64) { t = t + String.fromCharCode(i) } } t = Base64._utf8_decode(t); return t }, _utf8_encode: function (e) { e = e.replace(/rn/g, "n"); var t = ""; for (var n = 0; n < e.length; n++) { var r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r) } else if (r > 127 && r < 2048) { t += String.fromCharCode(r >> 6 | 192); t += String.fromCharCode(r & 63 | 128) } else { t += String.fromCharCode(r >> 12 | 224); t += String.fromCharCode(r >> 6 & 63 | 128); t += String.fromCharCode(r & 63 | 128) } } return t }, _utf8_decode: function (e) { var t = ""; var n = 0; var r = c1 = c2 = 0; while (n < e.length) { r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r); n++ } else if (r > 191 && r < 224) { c2 = e.charCodeAt(n + 1); t += String.fromCharCode((r & 31) << 6 | c2 & 63); n += 2 } else { c2 = e.charCodeAt(n + 1); c3 = e.charCodeAt(n + 2); t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63); n += 3 } } return t } }
        function getCapturedData(fpData) {
            debugger;
            if (fpData.status == "error") {
                $("#txtPotNo").val()
            }
            else if (fpData.status == "failed") {

                Swal.fire(
                    'error',
                    'Capture fingerprint failed! Please try again....',
                    'error'
                )
                $("#btnsubmit").hide();
                $("#hdndata").val('');
                ///$("#LodingSub").modal().hide();
                //$('.modal-backdrop').remove();
                $('#btnLThumb').css('display', 'block');
            }
            else {
                $("#btnsubmit").show();
                var xmlhttp = new XMLHttpRequest();
                var PiData = xmlhttp.responseText;
                var enckey = CryptoJS.enc.Utf8.parse($("#txtEnckey").val());
                var encIv = CryptoJS.enc.Utf8.parse($("#txtEncIv").val());
                PiData = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(fpData.data), enckey,
                    { keySize: 128 / 8, iv: encIv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
                PiData = PiData.ciphertext.toString(CryptoJS.enc.Base64);
                $("#hdndata").val(PiData);
                $('#FingerSuccess').removeClass('hidden');
                $('#Fingerblack').addClass('hidden');
                Swal.fire(
                    'success',
                    'Finger Capture Successfuly!',
                    'success'
                )
                $('#AadhaarNo').prop("readonly", "true");
                $('#mobileNumber').prop("readonly", "true");
                $('#Amount').prop("readonly", "true");
                $('#btnsubmit').removeAttr('hidden');
                $('#btnVerify').attr("hidden", true);
                $('#btnLThumb').css('display', 'none');               
            }
        }

    </script>
}
