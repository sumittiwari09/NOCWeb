@using NewZapures_V2.Models
@model TargetMaster
@{
    ViewBag.Title = "Target Configuration";
    ViewBag.Create = "Add New Target";

    var service = ViewBag.serviceDetailsList as List<Dropdown>;
}
@section styles {
    <link href="~/Content/select2/css/select2.css" rel="stylesheet" />
}
<style>
    .hideclass {
        display: none;
    }

    .showclass {
        display: block;
    }
</style>
<div class="row">
    <div class="col-sm-12">
        <div class="page-title-box">
            <div class="float-right">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">Zapures</li>
                    <li class="breadcrumb-item">Master</li>
                    <li class="breadcrumb-item active">@ViewBag.Create</li>
                </ol>
            </div>
            <h4 class="page-title">@ViewBag.Title</h4>
        </div><!--end page-title-box-->
    </div><!--end col-->
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4 class="mt-0 header-title float-left">@ViewBag.Title</h4>
                <button onclick="location.href='@Url.Action("ViewDetails", "Target")';return false;" class="btn btn-gradient-primary float-right waves-effect waves-light"><i class="fas fa-angle-left mr-2"></i>Back To List</button>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("SaveDetails", "Target", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @*<form>*@
                    <div class="row">
                        <div class="col-lg-12 row" style="margin-left: -12px;">

                            <div class="form-group col-lg-4">
                                <label for="example-text-input" class="col-sm-12" style="margin-left:-10px">Select Service</label>
                                <div>
                                    <select class="select2" id="ddlCategoryId" name="CategoryId" required>
                                        <option hidden>Select Any Service</option>
                                        @{
                                            if (service != null)
                                            {
                                                foreach (var item in service)
                                                {
                                                    <option value="@item.Id">@item.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="form-group col-lg-4">
                                <label for="example-text-input" class="col-sm-8" style="margin-left:-10px">Target Amount</label>
                                <div>
                                    <input class="form-control col-sm-12" type="number" autocomplete="off" placeholder="Target Amount" id="targetAmount" name="TargetAmount">
                                </div>
                            </div>

                            <div class="form-group col-lg-4">
                                <label for="example-text-input" class="col-sm-6" style="margin-left:-10px">Target Type</label>
                                <div>
                                    <select class="select2" name="TargetType" id="ddlTargetType" onchange="targetcalcEndDate();">
                                        <option value="0">Select Target Type</option>
                                        <option value="Year">Year</option>
                                        <option value="Month">Month</option>
                                        <option value="Day">Day</option>
                                    </select>
                                </div>
                            </div>


                        </div>
                    </div>

                    <div class="row">

                        <div class="form-group col-lg-4">
                            <label for="example-text-input" class="col-sm-8" style="margin-left:-10px">Target Period</label>
                            <div>
                                <input class="form-control col-sm-12" type="number" autocomplete="off" placeholder="Target Period" oninput="calcEndDate();" name="targetperiod" id="txttargetPeriod">
                            </div>
                        </div>
                        <div class="form-group col-lg-4">
                            <label for="example-text-input" class="col-sm-12" style="margin-left:-10px">Starting Date</label>
                            <div>
                                <input class="form-control col-sm-12" type="date" id="txtStartingDate" name="StartingDate" oninput="startcalcEndDate()" autocomplete="off">
                            </div>
                        </div>

                        <div class="form-group col-lg-4">
                            <label for="example-text-input" class="col-sm-12" style="margin-left:-10px">End Target Date</label>
                            <div>
                                <input class="form-control col-sm-12" type="date" id="txtEndTargetDate" ame="StartTargetDate" autocomplete="off" readonly />

                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="form-group col-lg-4">

                            <div>
                                <span>&nbsp;</span>
                                <button type="submit" class="form-control btn btn-gradient-primary float-right waves-effect waves-light">Save</button>

                            </div>

                        </div>
                    </div>

                    @*</form>*@
                }
            </div><!--end card-body-->
        </div><!--end card-->
    </div> <!-- end col -->
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.js"></script>
    <script src="~/Content/select2/js/select2.js"></script>

}
<script type="text/javascript">
    var targetType = "";
    $(document).ready(function () {
        $('.select2').select2();
        $('#txtStartingDate').val(new Date().toISOString().slice(0, 10));
        var selectType = $('#ddlTargetType option:selected').val();
        /* $('#txtEndTargetDate').val(new Date().toISOString().slice(0, 10));*/
    });

    function calcEndDate() {
        targetType = $('#ddlTargetType option:selected').val();
        var startingdate = new Date($('#txtStartingDate').val());
        var addnumber = parseInt($('#txttargetPeriod').val());

        if (targetType == "0") {
            Swal.fire({
                position: 'center',
                icon: 'error',
                title: "Please Select Target Type...",
                allowOutsideClick: false,
                showCloseButton: true,
                showConfirmButton: false,
            });
        }

        else if (targetType == "Year") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
        else if (targetType == "Month") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
        else if (targetType == "Day") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
    }

    function targetcalcEndDate() {
        targetType = $('#ddlTargetType option:selected').val();
        var startingdate = new Date($('#txtStartingDate').val());
        var addnumber = parseInt($('#txttargetPeriod').val());

        if (targetType == "0") {
            Swal.fire({
                position: 'center',
                icon: 'error',
                title: "Please Select Target Type...",
                allowOutsideClick: false,
                showCloseButton: true,
                showConfirmButton: false,
            });
        }

        else if (targetType == "Year") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
        else if (targetType == "Month") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
        else if (targetType == "Day") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
    }

    function startcalcEndDate() {
        targetType = $('#ddlTargetType option:selected').val();
        var startingdate = new Date($('#txtStartingDate').val());
        var addnumber = parseInt($('#txttargetPeriod').val());

        if (targetType == "0") {
            Swal.fire({
                position: 'center',
                icon: 'error',
                title: "Please Select Target Type...",
                allowOutsideClick: false,
                showCloseButton: true,
                showConfirmButton: false,
            });
        }

        else if (targetType == "Year") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
        else if (targetType == "Month") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
        else if (targetType == "Day") {
            BindEndDate(startingdate, addnumber)
            //ddMMyyyy(new Date(startingdate), 'set', addnumber);
        }
    }

    function BindEndDate(startDate, numberToAdd) {
        var newDate = "";
        if (targetType == "Year") {
            newDate = new Date(startDate.setYear(startDate.getFullYear() + parseInt(numberToAdd)));
            console.log('year added')
            console.log(newDate)
        }
        else if (targetType == "Month") {
            newDate = new Date(startDate.setMonth(startDate.getMonth() + parseInt(numberToAdd)));
            console.log('month added')
            console.log(newDate)
        }
        else if (targetType == "Day") {
            newDate = new Date(startDate.setDate(startDate.getDate() + parseInt(numberToAdd)));
            console.log('day added')
            console.log(newDate)
        }
        $('#txtEndTargetDate').val(new Date(newDate).toISOString().slice(0, 10));
    }


    //function ddMMyyyy(dateIn) {
    //        var yyyy = dateIn.getFullYear();
    //        var mm = dateIn.getMonth() + 1; //getMonth() is zero-based
    //        var dd = dateIn.getDate();
    //        if (mm < 10) {
    //            mm = '0' + mm;
    //        }
    //        if (dd < 10) {
    //            dd = '0' + dd;
    //        }
    //        return String(dd) + '-' + String(mm) + '-' + String(yyyy);
    //}

</script>