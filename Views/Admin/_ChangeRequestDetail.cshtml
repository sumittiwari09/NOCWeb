@using NewZapures_V2.Models.Others
@model NewZapures_V2.Models.ClientSwitchRequestData
@{
    // var Menus = ;
}
@*<link href="~/Content/select2/css/select2.css" rel="stylesheet" />*@
@section styles{
    <link href="~/plugins/datatables/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/datatables/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/datatables/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <link href="~/plugins/sweet-alert2/sweetalert2.min.css" rel="stylesheet" type="text/css">
    <link href="~/plugins/animate/animate.css" rel="stylesheet" type="text/css">


}
<div id="modal-ChangeRequest">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">
            @Html.HiddenFor(x => x.PartyId)
            @Html.HiddenFor(x => x.PartyType)
            @Html.HiddenFor(x => x.PartyName)
            @Html.HiddenFor(x => x.FromParentId)
            @Html.HiddenFor(x => x.ToParentId)
            @Html.HiddenFor(x => x.IsParentKnow)
            @*@Html.HiddenFor(x => x.Switchtype)*@
            @Html.Partial("_ModalHeader", new ModalHeader { Heading = "Switch Parent" })
            <div class="modal-body">
                <div class="row ">
                    <div class="col-lg-3">
                        <label>Request Type</label>
                        @Html.TextBoxFor(x => x.Switchtype, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    @if (Model.Switchtype == "MyLevel")
                    {
                        <div class="col-lg-3">
                            <label>Level</label>
                            @Html.TextBoxFor(x => x.ChangeLevel, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    }
                    <div class="col-lg-3">
                        <label>Wallet Balance</label>
                        @Html.TextBoxFor(x => x.MainWalletBalance, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="row ">
                    <div class="col-lg-3">
                        <label>Old Parent Name</label>
                        @Html.TextBoxFor(x => x.FromParentName, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    @if (Model.Switchtype == "MyParent" && Model.IsParentKnow == false)
                    {
                        <div id="dvparenddata" class="col-md-3">
                            <label>Select New Parent Type</label>
                            <span style="color:red;">*</span>
                            <select class="form-control singleselect" id="ddlparentdata" name="RetailerChannelType" data-istag="1" data-tags="true">
                                <option value="">Select Parent Type</option>
                                @{
                                    if (Model.NewParentTypeList != null)
                                    {
                                        foreach (var item in Model.NewParentTypeList)
                                        {
                                            <option value=@item.ListID>@item.ListName</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-3" style="display:none;" id="dvretailerparnt">
                            <label>Select New Parent Name</label>
                            <span style="color:red;">*</span>
                            <select id="ParentDataName" name="ParentDataName" class="form-control singleselect">
                                @*<option value="">Select</option>*@
                            </select>
                        </div>
                    }
                    else if (Model.Switchtype == "MyParent" && Model.IsParentKnow == true)
                    {
                        <div class="col-lg-3">
                            <label>New Parent Type</label>
                            @Html.TextBoxFor(x => x.ToParentPartyType, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-lg-3">
                            <label>New Parent Name</label>
                            @Html.TextBoxFor(x => x.ToParentName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    }
                    @if (Model.Switchtype == "MyLevel" && Model.IsParentKnow == false)
                    {
                        <div id="dvparenddata" class="col-md-3">
                            <label>Select New Parent Type</label>
                            <span style="color:red;">*</span>
                            <select class="form-control singleselect" id="ddlparentdata" name="RetailerChannelType" data-istag="1" data-tags="true">
                                <option value="">Select Parent Type</option>
                                @{
                                    if (Model.NewParentTypeList != null)
                                    {
                                        foreach (var item in Model.NewParentTypeList)
                                        {
                                            <option value=@item.ListID>@item.ListName</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-3" style="display:none;" id="dvretailerparnt">
                            <label>Select New Parent Name</label>
                            <span style="color:red;">*</span>
                            <select id="ParentDataName" name="ParentDataName" class="form-control singleselect">
                                @*<option value="">Select</option>*@
                            </select>
                        </div>
                    }
                    else if (Model.Switchtype == "MyLevel" && Model.IsParentKnow == true)
                    {
                        <div class="col-lg-3">
                            <label>New Parent Type</label>
                            @Html.TextBoxFor(x => x.ToParentPartyType, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-lg-3">
                            <label>New Parent Name</label>
                            @Html.TextBoxFor(x => x.ToParentName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    }
                </div>
                <hr />
                <div class="row">
                    <div class="col-lg-1">
                    </div>
                    <div class="col-lg-10">
                        <div class="panel panel-default">
                            <div class="panel panel-default">
                                <div class="panel-heading">Client List</div>
                            </div>
                            <div class="panel-body">
                                <div class="table-responsive well">
                                    <table id="Vendor" class="table table-striped table-hover" onscroll="true">
                                        <thead>
                                            <tr>
                                                <th>Mobile No.</th>
                                                <th>Client Name</th>
                                                <th>Wallet Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.clientList != null)
                                            {
                                                foreach (var item in Model.clientList)
                                                {
                                                    <tr>
                                                        <td>@item.MobileNo</td>
                                                        <td>@item.PartyName</td>
                                                        <td>@item.MainWalletBalance</td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-1">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn btn-default">Close</button>
                <button id="btnsubmit" type="submit" class="btn btn-primary start btn_Retailer">
                    <i class="fa fa-check-circle-o"></i>
                    <span>Update</span>
                </button>
            </div>
        </div>
    </div>
</div>
@*<script src="~/Content/select2/js/select2.js"></script>*@
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/plugins/sweet-alert2/sweetalert2.min.js"></script>
<script src="~/scripts/pages/jquery.sweet-alert.init.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
<script src="~/Content/globalDomain.js"></script>
<script type="text/javascript">
    $('#ddlparentdata').on('change', function () {
        
        var newparenttype = $("#ddlparentdata" + " option:selected").text();
        var oldparentid = $("#FromParentId").val();
        var op = '';
        if (newparenttype == 'Admin')
            op += "<option value=''>Select Admin</option>";
        else if (newparenttype == 'White Label')
            op += "<option value=''>Select White Label</option>";
        else if (newparenttype == 'Stockist')
            op += "<option value=''>Select Stockist</option>";
        else if (newparenttype == 'Distributer')
            op += "<option value=''>Select Distributer</option>";
        $("#dvretailerparnt").show();
        $("#ParentDataName option").remove();
        alert(oldparentid);
        $.ajax({
            type: "GET",
            url: GetglobalDomain() + '/Admin/GetActivePartyList',
            data: { newparenttype: newparenttype, oldparentid: oldparentid },
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (Data) {
                $.each(Data.Lst, function (i, item) {
                    op = op + '<option value="' + item.ListID + '">' + item.ListName + '</option>';
                });
                $("#ParentDataName").append(op);
            },
            error: function (Data) {
                //ValidationError('error');
            }
        });
        //$("#dvretailerparnt").show();
        //$("#ParentDataName option").remove();
        //var oldparentid = $("#parentidold").val();
        //var op = '';
        //
        //if (ParentName == "Admin") {
        //    $("#dvvendorparent").hide();
        //    $("#ParentDataName").attr("required");
        //    $.ajax({
        //        type: "GET",
        //        url: GetglobalDomain() + '/Home/GetActiveParentList',
        //        data: { ParentName: ParentName, ParentDataName: oldparentid },
        //        dataType: "json",
        //        contentType: "application/json; charset=utf-8",
        //        success: function (Data) {
        //            op += "<option value=''>Select Distributor</option>";
        //            $.each(Data.Lst, function (i, item) {
        //                op = op + '<option value="' + item.ListID + '">' + item.ListName + '</option>';
        //            });
        //            $("#ParentDataName").append(op);
        //        },
        //        error: function (Data) {
        //            //ValidationError('error');
        //        }
        //    });
        //}
        //else if (ParentName == "Distributer") {
        //    $("#dvvendorparent").hide();
        //    $("#ParentDataName").attr("required");
        //    $.ajax({
        //        type: "GET",
        //        url: GetglobalDomain() + '/Home/GetActiveParentList',
        //        data: { ParentName: ParentName, ParentDataName: oldparentid },
        //        dataType: "json",
        //        contentType: "application/json; charset=utf-8",
        //        success: function (Data) {
        //            op += "<option value=''>Select Distributor</option>";
        //            $.each(Data.Lst, function (i, item) {
        //                op = op + '<option value="' + item.ListID + '">' + item.ListName + '</option>';
        //            });
        //            $("#ParentDataName").append(op);
        //        },
        //        error: function (Data) {
        //            //ValidationError('error');
        //        }
        //    });
        //}
        //else if (ParentName == "White Label") {
        //    $("#dvvendorparent").hide();
        //    $("#ParentDataName").attr("required");
        //    $.ajax({
        //        type: "GET",
        //        url: GetglobalDomain() + '/Home/GetActiveParentList',
        //        data: { ParentName: ParentName, ParentDataName: oldparentid },
        //        dataType: "json",
        //        contentType: "application/json; charset=utf-8",
        //        success: function (Data) {
        //            op += "<option value=''>Select Distributor</option>";
        //            $.each(Data.Lst, function (i, item) {
        //                op = op + '<option value="' + item.ListID + '">' + item.ListName + '</option>';
        //            });
        //            $("#ParentDataName").append(op);
        //        },
        //        error: function (Data) {
        //            //ValidationError('error');
        //        }
        //    });
        //}
        //else if (ParentName == "Stockist") {
        //    $("#ParentDataName").attr("required");
        //    $("#dvvendorparent").hide();
        //    $.ajax({
        //        type: "GET",
        //        url: GetglobalDomain() + '/Home/GetActiveParentList',
        //        data: { ParentName: ParentName, ParentDataName: oldparentid },
        //        dataType: "json",
        //        contentType: "application/json; charset=utf-8",
        //        success: function (Data) {
        //            op += "<option value=''>Select SuperStokist</option>";
        //            $.each(Data.Lst, function (i, item) {
        //                op = op + '<option value="' + item.ListID + '">' + item.ListName + '</option>';
        //            });
        //            $("#ParentDataName").append(op);
        //        },
        //        error: function (Data) {
        //            //ValidationError('error');
        //            //ValidationError('error');
        //        }
        //    });
        //}
        //else {
        //    $("#dvretailerparnt").hide();
        //}

    });
    $('#btnsubmit').on("click", function () {
        
        var regdetails = {};
        var SwitchType = $('#Switchtype').val();
        var IsParentKnow = $('#IsParentKnow').val();
        var PartyId = $('#PartyId').val();
        var PartyName = $('#PartyName').val();
        var OldParentId = $('#FromParentId').val();
        var OldParentName = $('#FromParentName').val();
        var NewParentType = '';
        var NewParentname = '';
        var NewParentId = '';
        if (SwitchType == 'MyParent' && IsParentKnow == 'True') {
            NewParentType = $('#ToParentPartyType').val();
            NewParentId = $('#ToParentId').val();
            NewParentname = $('#ToParentName').val();
        }
        if (SwitchType == 'MyParent' && IsParentKnow == 'False') {
            NewParentType = $('#ddlparentdata option:selected').text();
            if (NewParentType == "Admin") {
                NewParentname = "Admin";
                NewParentId = "A000001";
            }
            else if (NewParentType == "Stockist" || NewParentType == "Distributer" || NewParentType == "White Label") {
                NewParentId = $('#ParentDataName').val();
                NewParentname = $("#ParentDataName" + " option:selected").text();
            }
        }
        if (SwitchType == 'MyLevel' && IsParentKnow == 'True') {
            NewParentType = $('#ToParentPartyType').val();
            NewParentId = $('#ToParentId').val();
            NewParentname = $('#ToParentName').val();
        }
        if (SwitchType == 'MyLevel' && IsParentKnow == 'False') {
            NewParentType = $('#ddlparentdata option:selected').text();
            if (NewParentType == "Admin") {
                NewParentname = "Admin";
                NewParentId = "A000001";
            }
            else if (NewParentType == "Stockist" || NewParentType == "Distributer" || NewParentType == "White Label") {
                NewParentId = $('#ParentDataName').val();
                NewParentname = $("#ParentDataName" + " option:selected").text();
            }
        }

        //var NewParentType = $('#ddlparentdata option:selected').text();
        regdetails.SwitchType = SwitchType,
            regdetails.SwitchVendorId = PartyId,
            regdetails.FromParentID = OldParentId,
            regdetails.ToParentID = NewParentId
        if (NewParentId == "" || NewParentId == null || NewParentId == undefined) {
            //ValidationError('Select ParentId field!');
        }
        else if (NewParentId == OldParentId) {
            //ValidationError('Please Select Different Parent!');
        }
        else {
            //$('#modal-ChangeRequest').modal('hide');
            swal.fire({
                title: "Are you sure?",
                text: "You want to Switch Client: " + " " + PartyName + "\n" + "From Parent: " + " " + OldParentName + " " + "To Parent: " + " " + NewParentname,
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, I am Sure!",
                cancelButtonText: "No, Cancel please!",
                closeOnConfirm: false,
                closeOnCancel: false
            }).then((result) => {
                if (result) {
                    
                    swal.close();
                    //$("#Loding").modal({ backdrop: "static" });
                    var newUrl = GetglobalDomain() + '/Admin/ClientChangeRequest';
                    $.ajax({
                        url: GetglobalDomain() + '/Admin/UpdateParent',
                        data: '{model: ' + JSON.stringify(regdetails) + '}',
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (Data) {
                            
                            if (Data.Details.ResponseCode == 1) {
                                setTimeout(function () {
                                    swal.fire({
                                        title: "Done!",
                                        text: Data.Details.Messsage,
                                        type: "success"
                                    },
                                        function (isConfirm) {
                                            if (isConfirm) {
                                                window.location.href = newUrl;
                                            }
                                        });
                                }, 1000);
                            }
                            else {
                                setTimeout(function () {
                                    swal({
                                        title: "Error",
                                        text: Data.Details.Messsage,
                                        type: "warning"
                                    },
                                        function (isConfirm) {
                                            if (isConfirm) {
                                                window.location.href = newUrl;
                                            }
                                        });
                                }, 1000);
                            }
                        }
                    });
                }
                else {
                    setTimeout(function () {
                        $("#Loding").modal('hide');
                        swal.fire("Cancelled", "");
                    }, 1000);
                }
            });
        }
    });
</script>
